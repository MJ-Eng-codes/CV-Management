// <auto-generated />
using System;
using CV_Management.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CV_Management.Migrations
{
    [DbContext(typeof(CVManageDBContext))]
    partial class CVManageDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CV_Management.Models.Education", b =>
                {
                    b.Property<int>("EduID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EduID"));

                    b.Property<string>("Degree")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("School")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserID_Fk")
                        .HasColumnType("int");

                    b.HasKey("EduID");

                    b.HasIndex("UserID_Fk");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("CV_Management.Models.JobExp", b =>
                {
                    b.Property<int>("JobID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobID"));

                    b.Property<string>("Company")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<float?>("Duration")
                        .HasColumnType("real");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserID_Fk")
                        .HasColumnType("int");

                    b.Property<string>("WorkDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("JobID");

                    b.HasIndex("UserID_Fk");

                    b.ToTable("JobExp");
                });

            modelBuilder.Entity("CV_Management.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("CV_Management.Models.Education", b =>
                {
                    b.HasOne("CV_Management.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID_Fk");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CV_Management.Models.JobExp", b =>
                {
                    b.HasOne("CV_Management.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID_Fk");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
